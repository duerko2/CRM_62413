@page "/newcampaign"
@using BlazorApp.Models
@using BlazorApp.Services
@inject CampaignService CampaignService
@inject NavigationManager NavigationManager

<PageTitle>New Campaign</PageTitle>

<h3>Create New Campaign</h3>

<EditForm Model="newCampaignModel" OnValidSubmit="CreateCampaign">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    <!-- Input for campaign name -->
    <div class="form-group">
        <label for="campaignName">Campaign Name</label>
        <InputText id="campaignName" class="form-control" @bind-Value="newCampaignModel.Name" placeholder="Enter campaign name" />
    </div>

    <!-- Dropdown to select number of stages -->
    <div class="form-group">
        <label for="numberOfStages">Number of Stages (1-5)</label>
        <select id="numberOfStages" class="form-control" @bind="numberOfStages">
            @for (int i = 1; i <= 5; i++)
            {
                    <option value="@i">@i</option>
            }
        </select>
    </div>

    <!-- Inputs for stages and master tasks -->
    <div class="form-group">
        <label>Define Stages</label>
        @if (newCampaignModel.Stages != null)
        {
            int stageNumber = 1;
            foreach (var stage in newCampaignModel.Stages)
            {
                        <div class="stage-section">
                            <h5>Stage @stageNumber</h5>
                            <div class="form-group">
                                <label>Stage Name (max 20 chars)</label>
                                <InputText class="form-control" maxlength="20" @bind-Value="stage.Name" placeholder="Enter stage name" />
                            </div>
                            <div class="form-group">
                                <label>
                                    <InputCheckbox @bind-Value="stage.RequireMasterTask" />
                                    Require Master Task
                                </label>
                            </div>
                    @if (stage.RequireMasterTask)
                    {
                                    <div class="form-group">
                                        <label>Master Task Description</label>
                                        <InputTextArea class="form-control" @bind-Value="stage.MasterTaskDescription" placeholder="Enter master task description" />
                                    </div>
                    }
                        </div>
                stageNumber++;
            }
        }
        else
        {
                <p>Error: Stages not initialized.</p>
        }
    </div>

    <!-- Error message for missing required fields -->
    @if (showErrorMessage)
    {
            <div class="alert alert-danger">@errorMessage</div>
    }

    <!-- Submit button -->
    <button type="submit" class="btn btn-primary">Create Campaign</button>
</EditForm>

<style>
    .stage-section {
        border: 1px solid #dee2e6;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 15px;
        background-color: #f8f9fa;
    }
</style>

@code {
    private CampaignModel newCampaignModel = new CampaignModel();
    private int _numberOfStages = 1;
    private int numberOfStages
    {
        get => _numberOfStages;
        set
        {
            if (_numberOfStages != value)
            {
                AdjustStages(value);
                _numberOfStages = value;
            }
        }
    }
    private bool showErrorMessage = false;
    private string errorMessage = "";

    protected override void OnInitialized()
    {
        AdjustStages(numberOfStages);
    }

    private void AdjustStages(int newCount)
    {
        if (newCampaignModel.Stages == null)
        {
            newCampaignModel.Stages = new List<CampaignStageModel>();
        }

        int currentCount = newCampaignModel.Stages.Count;

        if (newCount > currentCount)
        {
            // Add new stages
            for (int i = currentCount; i < newCount; i++)
            {
                newCampaignModel.Stages.Add(new CampaignStageModel());
            }
        }
        else if (newCount < currentCount)
        {
            // Remove extra stages
            newCampaignModel.Stages.RemoveRange(newCount, currentCount - newCount);
        }
    }

    private bool ValidateCampaign()
    {
        if (string.IsNullOrWhiteSpace(newCampaignModel.Name))
        {
            errorMessage = "Please enter a campaign name.";
            return false;
        }

        if (newCampaignModel.Stages.Any(stage => string.IsNullOrWhiteSpace(stage.Name)))
        {
            errorMessage = "Please provide names for all stages.";
            return false;
        }

        if (newCampaignModel.Stages.Any(stage => stage.Name.Length > 20))
        {
            errorMessage = "Stage names must be 20 characters or fewer.";
            return false;
        }

        if (newCampaignModel.Stages.Select(s => s.Name).Distinct().Count() != numberOfStages)
        {
            errorMessage = "Stage names must be unique.";
            return false;
        }

        foreach (var stage in newCampaignModel.Stages)
        {
            if (stage.RequireMasterTask && string.IsNullOrWhiteSpace(stage.MasterTaskDescription))
            {
                errorMessage = $"Please provide a master task description for stage '{stage.Name}'.";
                return false;
            }
        }

        return true;
    }


    private void CreateCampaign()
    {
        if (!ValidateCampaign())
        {
            showErrorMessage = true;
            return;
        }

        showErrorMessage = false;

        // Add the campaign via the service
        CampaignService.AddCampaign(newCampaignModel);

        // Navigate to the Campaigns page
        NavigationManager.NavigateTo("/campaigns");
    }
}
