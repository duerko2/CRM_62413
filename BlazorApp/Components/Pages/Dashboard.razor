@using RolesAndPermissions
@inject DashboardService DashboardService
@inject IUserAccessManager UserAccessManager;

@if(UserAccessManager.HasPermission(UserContext.User, "ManagerDashboard"))
{
    <h1>Manager Dashboard</h1>
}
else if(UserAccessManager.HasPermission(UserContext.User, "UserDashboard"))
{
    <h1>Employee Dashboard</h1>
}
<hr/>

@if(UserAccessManager.HasPermission(UserContext.User, "ManagerDashboard"))
{
    <h3>Campaign funnel</h3>
    <h6>Overview of campaign progress and pipeline status for whole team</h6>
}
else if(UserAccessManager.HasPermission(UserContext.User, "UserDashboard"))
{
    <h3>My Campaign funnel</h3>
}


<div class="d-flex flex-row-reverse">
    <InputSelect class="form-select w-auto" @bind-Value="selectedCamapaignId" @bind-Value:after="OnChange">
        <option disabled>Select campaign</option>
        @foreach (var campaign in availableCampaigns)
        {
        <option value="@campaign.Id">@campaign.Name</option>
        }
    </InputSelect>
</div>
<Funnel FunnelData="funnelData" />

<hr/>

@if(UserAccessManager.HasPermission(UserContext.User, "ManagerDashboard"))
{
    <h3>Task Tracker</h3>
    <h6>Review and monitor team tasks</h6>
}
else if(UserAccessManager.HasPermission(UserContext.User, "UserDashboard"))
{
    <h3>My Tasks</h3>
}

<TasksList/>

@code {
    [CascadingParameter] private UserContext UserContext { get; set; }
    
    private int selectedCamapaignId;
    private List<AvailableCampaigns> availableCampaigns;
    private FunnelView funnelData;

    protected override async Task OnInitializedAsync()
    {
        availableCampaigns = DashboardService.GetAvailableCampaigns(UserContext.UserId);
        if (!availableCampaigns.Any())
            return;
        
        selectedCamapaignId = availableCampaigns.FirstOrDefault()?.Id ?? default;
        
        if(UserAccessManager.HasPermission(UserContext.User, "ManagerDashboard"))
        {
            funnelData = DashboardService.GetCampaignFunnel(selectedCamapaignId);
        }
        else if(UserAccessManager.HasPermission(UserContext.User, "UserDashboard"))
        {
            funnelData = DashboardService.GetCampaignFunnel(selectedCamapaignId, UserContext.UserId);
        }
    }

    private void OnChange()
    {
        if(UserAccessManager.HasPermission(UserContext.User, "ManagerDashboard"))
        {
            funnelData = DashboardService.GetCampaignFunnel(selectedCamapaignId);
        }
        else if(UserAccessManager.HasPermission(UserContext.User, "UserDashboard"))
        {
            funnelData = DashboardService.GetCampaignFunnel(selectedCamapaignId, UserContext.UserId);
        }
        StateHasChanged();
    }
}
